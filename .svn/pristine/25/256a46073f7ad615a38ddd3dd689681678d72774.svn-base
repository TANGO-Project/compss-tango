#!/bin/bash

  # Obtain parameters
  output_file=$1 
  target_log_folder=$2
  
  # Log files
  runtime_log="${target_log_folder}/runtime.log"

  #----------------------------------------------------------------------------------
  # Check output standard out status
  if [ -f "${output_file}" ]; then
     result_expected="------------------------------------------------------------"
     test_result=$(tail -1 "${output_file}")
     if [ "${result_expected}" != "${test_result}" ]; then
        echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a "${output_file}"
        exit 1
     fi
  else
     echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a "${output_file}"
     exit 1
  fi
  # Check that ErrorManager has not generated any ERROR or FATAL message
  errMngMsg=$(cat "${output_file}" "${runtime_log}" | tr '\n' ' ' | grep -E -q "[ERRMGR].*(ERROR|FATAL):.*.*Shutting")
  if [ "$errMngMsg" != "" ]; then
    echo "ERROR: ERRMGR RAISED A FATAL ERROR. TEST FAILED." | tee -a "${output_file}"
    exit 1
  fi

  #---------------------------------------------------------------------------------- 
  # Compute result status
  hosts=$(grep "Target host" "$runtime_log" | awk '{ print $NF }')
  producer=$(echo "$hosts" | awk '{ print $1 }')
  consumer=$(echo "$hosts" | awk '{ print $2 }')
  if [ "$producer" == "$consumer" ]; then
    echo "ERROR: Tasks are not beeing scheduled at the same time in different workers" | tee -a "${output_file}"
    exit 1
  fi

  exit 0
  
