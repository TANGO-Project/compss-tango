#!/bin/bash -e

  #Obtain parameters
  output_file=$1 
  target_log_folder=$2
  error_file=$3

  # Log files
  runtime_log="${target_log_folder}/runtime.log"

  #----------------------------------------------------------------------------------
  # Check output standard out status
  if [ -f ${output_file} ]; then
     result_expected="------------------------------------------------------------"
     test_result=$(tail -1 ${output_file})
     if [ "${result_expected}" != "${test_result}" ]; then
        echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
        exit 1
     fi
  else
     echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
     exit 1
  fi
  # Check that ErrorManager has not generated any ERROR or FATAL message.
  if $(cat "${output_file}" "${runtime_log}" | tr '\n' ' ' | grep -E -q "[ERRMGR].*(ERROR|FATAL):.*.*Shutting"); then
    echo "ERROR: ERRMGR RAISED A FATAL ERROR. TEST FAILED." | tee -a ${output_file}
    exit 1
  fi
  # Check that JNI has not raised an error
  jniError=$(cat "${error_file}" | grep "Exception in thread" | cat)
  if [[ ! -z ${jniError} ]]; then
    echo "ERROR: JNI HAS RAISED A FATAL ERROR. TEST FAILED." | tee -a ${output_file}
    exit 1
  fi

  #---------------------------------------------------------------------------------- 
  # Compute result status
  result=$(cat ${output_file} | grep "The result is" | cut -c 15-)
  expected_result=4872.82 

  result=${result::-1}

  # Report result status
  if [ "$result" != "$expected_result" ]; then
     echo "ERROR ON TASKS SCHEDULE" | tee -a ${output_file}
     echo "EXPECTED RESULT: $expected_result" | tee -a ${output_file}
     echo "GOT: $result" | tee -a ${output_file}
     exit 1
  fi

  #Check if config is loaded
  echo "cat \"${runtime_log}\" | grep \"Reading Multi-objective from file mo_config.properties\" | wc -l"
  result_config=$(cat "${runtime_log}" | grep "Reading Multi-objective from file mo_config.properties" | wc -l)
  expected_config=1
  if [ "$result_config" != "$expected_config" ]; then
     echo "ERROR CONFIG NOT LOADED" | tee -a ${output_file}
     echo "EXPECTED RESULT: $expected_config" | tee -a ${output_file}
     echo "GOT: $result_config" | tee -a ${output_file}
     exit 1
  fi
  #Check loaded params
  echo "cat \"${runtime_log}\" | grep \"LOADED OPTIMIZATION PARAMETER\: ENERGY\" | wc -l"
  echo "cat \"${runtime_log}\" | grep \"LOADED BOUNDARIES: \[20000, 500, 20, 500000, 2000\]\" | wc -l"
  result_op_loaded=$(cat "${runtime_log}" | grep "LOADED OPTIMIZATION_PARAMETER\: ENERGY" | wc -l)
  result_bound_loaded=$(cat ${runtime_log} | grep "LOADED BOUNDARIES: \[20000, 500, 20, 500000, 2000\]" | wc -l)
  if [ "$result_op_loaded" != "$expected_config" ]; then
     echo "ERROR INCORRECT OPTIMIZATION PARAMETER" | tee -a ${output_file}
     echo "EXPECTED RESULT: $expected_config" | tee -a ${output_file}
     echo "GOT: $result_op_loaded" | tee -a ${output_file}
     exit 1
  fi
  if [ "$result_bound_loaded" != "$expected_config" ]; then
     echo "ERROR INCORRECT BOUNDARIES" | tee -a ${output_file}
     echo "EXPECTED RESULT: $expected_config" | tee -a ${output_file}
     echo "GOT: $result_bound_loaded" | tee -a ${output_file}
     exit 1
  fi
  #Check loaded params
  result_profile_loaded=$(cat ${runtime_log} | grep "Input profile detected. Reading from file matmul_mo_in.profile" | wc -l)
  if [ "$result_profile_loaded" != "$expected_config" ]; then
     echo "ERROR INCORRECT OPTIMIZATION PARAMETER" | tee -a ${output_file}
     echo "EXPECTED RESULT: $expected_config" | tee -a ${output_file}
     echo "GOT: $result_profile_loaded" | tee -a ${output_file}
     exit 1
  fi
  if [ ! -f matmul_mo_out.profile ]; then
        echo "ERROR out profile not found." | tee -a ${output_file}
        exit 1
  fi

  

  exit 0

