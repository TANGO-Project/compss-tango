#!/bin/bash

  #Obtain parameters
  output_file=$1
  target_log_folder=$2
  comm=$3
  number_of_tasks=32
  number_of_workers=1
  number_of_threads=4
  errors=false

  # Log files
  runtime_log="${target_log_folder}/runtime.log"

  # Should be equal to Tracer.java definitions
  SYNC_EVENTS=8000666
  TASK_EVENTS=60000100

  WORKER_TASK=1
  WORKER_RUNNING=102

  TASK_EXECUTION=120
  SERIALIZATION=121

  #----------------------------------------------------------------------------------
  # Check that task-bindings events are present and the # is correct

  # GAT does not support task tracing
  if [ "${comm}" != "es.bsc.compss.gat.master.GATAdaptor" ]; then

      evts_tasks=$(grep -c ":${TASK_EVENTS}:[1-9][0-9]*" ${target_log_folder}/trace/task_tracing_kmeans.py_compss_trace_*.prv)
      evts_tasks_end=$(grep -c "${TASK_EVENTS}:0" ${target_log_folder}/trace/task_tracing_kmeans.py_compss_trace_*.prv)
      evts_worker_running=$(grep -c ":${TASK_EVENTS}:${WORKER_RUNNING}" ${target_log_folder}/trace/task_tracing_kmeans.py_compss_trace_*.prv)
      evts_worker_running_end=$(grep -c "2:1:1:2:1:.*:${TASK_EVENTS}:0" ${target_log_folder}/trace/task_tracing_kmeans.py_compss_trace_*.prv)

      sync_evts_init=$(grep -c ":${SYNC_EVENTS}:[1-9][0-9]*" ${target_log_folder}/trace/task_tracing_kmeans.py_compss_trace_*.prv)
      sync_evts_end=$(grep -c ":${SYNC_EVENTS}:0" ${target_log_folder}/trace/task_tracing_kmeans.py_compss_trace_*.prv)


#      if [ "${evts_tasks}" != "$((${number_of_tasks}+${number_of_threads}))" ]; then
#         echo "[ERROR] Incorrect number of python task start events. [${evts_tasks}/$((${number_of_tasks}+${number_of_threads}))]"
#         errors=true
#      fi
#
#      if [ "${evts_tasks_end}" != "$((${number_of_tasks}+${number_of_threads}))" ]; then
#         echo "[ERROR] Incorrect number of python task end events. [${evts_tasks_end}/$((${number_of_tasks}+${number_of_threads}))]"
#         errors=true
#      fi

      if [ "${evts_tasks_end}" != "${evts_tasks}" ]; then
         echo "[ERROR] Start and end events counts do not match. [${evts_tasks}/${evts_tasks_end}]"
         errors=true
      fi

      start_evts=${evts_tasks}
      if [ "${evts_worker_running}" != "1" ] ; then
        echo "[ERROR] Number of worker start events different than actual number of workers [${evts_worker_running} != 1]"
        errors=true
      fi

      if [ "${sync_evts_init}" != "$((2*${number_of_workers}))" ] || [ "${sync_evts_end}" != "$((2*${number_of_workers}))" ]; then
        echo "[ERROR] Number of start and end synchronization events are not 4 times the number of workers.
        Expected events: $((4*${number_of_workers})) != Found Events: [${sync_evts_init} + ${sync_evts_end}]"
        errors=true
      fi

  fi

  # Check that ErrorManager has not generated any ERROR or FATAL message.
  if $(cat "${output_file}" "${runtime_log}" | tr '\n' ' ' | grep -c -E -q "[ERRMGR].*(ERROR|FATAL):.*.*Shutting"); then
    echo "ERROR: ERRMGR RAISED A FATAL ERROR. TEST FAILED." | tee -a ${output_file}
    errors=true
  fi


  # Exit value
  if [ $errors == true ] ; then
    exit 1
  fi

  exit 0


