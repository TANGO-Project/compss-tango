#!/bin/bash
  
  # Obtain parameters
  output_file=$1 
  target_log_folder=$2
 
  # Log files
  runtime_log="${target_log_folder}/runtime.log"

  #----------------------------------------------------------------------------------
  # Check output standard out status
  if [ -f ${output_file} ]; then
     result_expected="------------------------------------------------------------"
     test_result=$(tail -1 ${output_file})
     if [ "${result_expected}" != "${test_result}" ]; then
        echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
        exit 1
     fi
  else
     echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
     exit 1
  fi
  # Check that ErrorManager has not generated any ERROR or FATAL message.
  if $(cat "${output_file}" "${runtime_log}" | tr '\n' ' ' | grep -E -q "[ERRMGR].*(ERROR|FATAL):.*.*Shutting"); then
    echo "ERROR: ERRMGR RAISED A FATAL ERROR. TEST FAILED." | tee -a ${output_file}
    exit 1
  fi

  #---------------------------------------------------------------------------------- 
  # Compute result status
  types_expected="java.lang.String boolean char java.lang.String byte short int long float double"
  values_expected="true E My Test 7 77 777 7777 7.7 7.77777"
  types_params=$(cat ${target_log_folder}/jobs/job1_NEW.out | grep "Parameter types:" | cut -c 22-)
  values_params=$(cat ${target_log_folder}/jobs/job1_NEW.out | grep "Parameter values:" | rev | cut -c -40 | rev)

  #Report result status
  exitValue=0
  if [ "$types_params" != "$types_expected" ]; then
     echo "ERROR ON PARAMETER TYPES" | tee -a ${output_file}
     echo "EXPECTED: $types_expected" | tee -a ${output_file}
     echo "GOT:      $types_params" | tee -a ${output_file}
     exitValue=1
  fi
  if [ "$values_params" != "$values_expected" ]; then
     echo "ERROR ON PARAMETER VALUES" | tee -a ${output_file}
     echo "EXPECTED: $values_expected" | tee -a ${output_file}
     echo "GOT:      $values_params" | tee -a ${output_file}
     exitValue=2
  fi
  
  exit $exitValue
  
