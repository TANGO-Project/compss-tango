#!/bin/bash

  # Obtain parameters
  output_file=$1
  error_file=$2
  target_log_folder=$3

  # Log files
  runtime_log="${target_log_folder}/runtime.log"

  #----------------------------------------------------------------------------------
  ## Check output standard out status -- OVERRIDE THE FOLLOWING DUE TO TESTING EXCEPTIONS BEFORE REACHING THE END
  #if [ -f ${output_file} ]; then
  #   result_expected="------------------------------------------------------------"
  #   test_result=$(tail -1 ${output_file})
  #   if [ "${result_expected}" != "${test_result}" ]; then
  #      echo "SOME ERROR WAS FOUND. CHECK ERROsRS ABOVE." | tee -a ${output_file}
  #      exit 1
  #   fi
  #else
  #   echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
  #   exit 1
  #fi
  ## Check that ErrorManager has not generated any ERROR or FATAL message.
  #if $(cat "${output_file}" "${runtime_log}" | tr '\n' ' ' | grep -E -q "[ERRMGR].*(ERROR|FATAL):.*.*Shutting"); then
  #  echo "ERROR: ERRMGR RAISED A FATAL ERROR. TEST FAILED." | tee -a ${output_file}
  #  exit 1
  #fi

  #----------------------------------------------------------------------------------
  # Compute result status
  if grep -q "ERROR" "$output_file"; then
    echo "An ERROR occurred running the test - INVALID RESULT."
    exit 2
  fi

  if grep -q "Traceback" "$error_file"; then
    echo "Traceback found - OK"
    if grep -q "Exception: GENERAL EXCEPTION RAISED - HAPPENED AFTER SUBMITTING TASKS AT MASTER BUT AFTER SYNC." "$error_file"; then
      echo "Exception found - OK"
    else
      echo "Exception not found - ERROR"
      exit 1
    fi
  else
    echo "Traceback not found - ERROR"
    exit 1
  fi

  exit 0
