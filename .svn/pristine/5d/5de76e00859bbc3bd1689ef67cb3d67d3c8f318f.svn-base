#!/bin/bash

  #Obtain parameters
  output_file=$1 
  target_log_folder=$2
  
  #Log files
  runtime_log="${target_log_folder}/runtime.log"
  
  #Check output standard out status
  if [ -f ${output_log} ]; then
     result_expected="------------------------------------------------------------"
     test_result=$(tail -1 ${output_file})
     if [ "${result_expected}" != "${test_result}" ]; then
        echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee ${output_file}
        exit 1
     fi
  else
     echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee ${output_file}
     exit 1
  fi
  
  #Compute result status
  echo "COMPUTING RESULTS" | tee ${output_file}
  submissionFailedGOT=$(cat ${runtime_log} | grep "SUBMISSION_FAILED" | cut -c 79-)
  submissionFailedEXPECTED1=$'Received a notification for job 3 with state SUBMISSION_FAILED\nReceived a notification for job 4 with state SUBMISSION_FAILED\nReceived a notification for job 3 with state SUBMISSION_FAILED\nAsking for reschedule of job 3 due to job failure: SUBMISSION_FAILED\nReceived a notification for job 4 with state SUBMISSION_FAILED\nAsking for reschedule of job 4 due to job failure: SUBMISSION_FAILED'
  submissionFailedEXPECTED2=$'Received a notification for job 1 with state SUBMISSION_FAILED\nReceived a notification for job 2 with state SUBMISSION_FAILED\nReceived a notification for job 1 with state SUBMISSION_FAILED\nAsking for reschedule of job 1 due to job failure: SUBMISSION_FAILED\nReceived a notification for job 2 with state SUBMISSION_FAILED\nAsking for reschedule of job 2 due to job failure: SUBMISSION_FAILED'
  rescheduleGOT1=$(cat ${runtime_log} | grep "To Reschedule:" | cut -c 79-) 
  rescheduleGOT2=$(cat ${runtime_log} | grep "Rescheduled Job")
  rescheduleEXPECTED1=$'To Reschedule: Task(3, COMPSsWorker02) \nTo Reschedule: Task(4, COMPSsWorker01) ' 
  rescheduleEXPECTED2=$'To Reschedule: Task(1, COMPSsWorker01) \nTo Reschedule: Task(2, COMPSsWorker02) ' 

  #Report result status
  echo "CHECKING RESULTS" | tee ${output_file}
  exitValue=0
  if [ "$submissionFailedGOT" != "$submissionFailedEXPECTED1" ] && [ "$submissionFailedGOT" != "$submissionFailedEXPECTED2" ]; then
     echo "ERROR: Tolerance on baduser worker connection is not working due to submission stats. CHECK LOG." | tee ${output_file}
     echo "GOT: $submissionFailedGOT" | tee ${output_file}
     echo "EXPECTED: $submissionFailedEXPECTED1" | tee ${output_file}
     echo "OR: $submissionFailedEXPECTED2" | tee ${output_file}
     exitValue=1
  fi
  if [ "$rescheduleGOT1" != "$rescheduleEXPECTED1" ] && [ "$rescheduleGOT1" != "$rescheduleEXPECTED2" ] && [ -z "$rescheduleGOT2" ]; then
     echo "ERROR: Tolerance on baduser worker connection is not working due to reschedule stats. CHECK LOG." | tee ${output_file}
     echo "GOT1: $recheduleGOT1">> ${output_file}
     echo "GOT2: $recheduleGOT2">> ${output_file}
     echo "EXPECTED: $rescheduleEXPECTED1" | tee ${output_file}
     echo "OR: $rescheduleEXPECTED2" | tee ${output_file}
     exitValue=2
  fi
  exit $exitValue
  