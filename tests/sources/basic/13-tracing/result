#!/bin/bash

  # Obtain parameters
  output_file=$1 
  target_log_folder=$2
  executions_per_task=$3
  number_tasks=4
    
  # Log files
  runtime_log="${target_log_folder}/runtime.log"

  #----------------------------------------------------------------------------------
  # Check output standard out status
  if [ -f ${output_file} ]; then
     result_expected="------------------------------------------------------------"
     test_result=$(tail -1 ${output_file})
     if [ "${result_expected}" != "${test_result}" ]; then
        echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
        exit 1
     fi
  else
     echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
     exit 1
  fi
  # Check that ErrorManager has not generated any ERROR or FATAL message.
  if $(cat "${output_file}" "${runtime_log}" | tr '\n' ' ' | grep -E -q "[ERRMGR].*(ERROR|FATAL):.*.*Shutting"); then
    echo "ERROR: ERRMGR RAISED A FATAL ERROR. TEST FAILED." | tee -a ${output_file}
    exit 1
  fi

  #---------------------------------------------------------------------------------- 
  #Compute result status
  errors=false
  single_emit=1
  double_emit=$((single_emit*2))
  
  total_executed_tasks=$(($executions_per_task*$number_tasks))
  finish_events=$total_executed_tasks
  # event_static=$(cat ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv | grep "8000000:1$" | wc -l)
  # event_startit=$(cat ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv | grep "8000000:2$" | wc -l)
  # event_stopit=$(cat ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv | grep "8000000:3$" | wc -l)
  # events_execute_task=$(cat ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv | grep "8000000:4$" | wc -l)
  # event_nomoretasks=$(cat ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv | grep "8000000:5$" | wc -l)
  # events_open_file=$(cat ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv | grep "8000000:6$" | wc -l)
  # events_get_file=$(cat ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv | grep "8000000:7$" | wc -l)
  # events_get_object=$(cat ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv | grep "8000000:8$" | wc -l)
  # events_delete_file=$(cat ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv | grep "8000000:9$" | wc -l)
  # events_task_running=$(cat ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv | grep "8000000:10$" | wc -l)
  # events_transfers=$(cat ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv | grep "8000000:11$" | wc -l)

  events_type1=$(cat ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv | grep ":8000000:1" | wc -l)
  events_type2=$(cat ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv | grep ":8000000:2" | wc -l)
  events_type3=$(cat ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv | grep ":8000000:3" | wc -l)
  events_type4=$(cat ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv | grep ":8000000:4" | wc -l)
  events_close=$(cat ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv | grep ":8000000:0" | wc -l)

  # if [ "$event_startit" != "$single_emit" ] || 
  #    [ "$event_stopit" != "$single_emit" ] || 
  #    [ "$events_execute_task" != "$executed_tasks" ] || 
  #    [ "$event_nomoretasks" != "$single_emit" ] || 
  #    [ "$events_open_file" != "$double_emit" ] || 
  #    [ "$events_get_file" != "$single_emit" ] || 
  #    [ "$events_get_object" != "$single_emit" ] || 
  #    [ "$events_delete_file" != "$single_emit" ] || 

  if [ "$events_type1" != "$executions_per_task" ]; then
     echo "[ERROR] Incorrect number of task 1 events. [$events_type1/$executions_per_task]" | tee -a $output_file
     errors=true
  fi
  if [ "$events_type2" != "$executions_per_task" ]; then
     echo "[ERROR] Incorrect number of task 2 events. [$events_type2/$executions_per_task]" | tee -a $output_file
     errors=true
  fi
  if [ "$events_type3" != "$executions_per_task" ]; then 
     echo "[ERROR] Incorrect number of task 3 events. [$events_type3/$executions_per_task]" | tee -a $output_file
     errors=true
  fi
  if [ "$events_type4" != "$executions_per_task" ]; then 
     echo "[ERROR] Incorrect number of task 4 events. [$events_type4/$executions_per_task]" | tee -a $output_file
     errors=true
  fi
  if [ "$events_close" != "$finish_events" ] ; then
     echo "[ERROR] Incorrect number of finished task events. [$events_close/$finish_events]" | tee -a $output_file
     errors=true
  fi
  
  start_events_8000000=$(grep -c ':8000000:[1-9][0-9]*' ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv)
  end_events_8000000=$(grep -c ':8000000:0' ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv)
  start_events_8000001=$(grep -c ':8000001:[1-9][0-9]*' ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv)
  end_events_8000001=$(grep -c ':8000001:0' ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv)
  start_events_8000002=$(grep -c ':8000002:[1-9][0-9]*' ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv)
  end_events_8000002=$(grep -c ':8000002:0' ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv)
  start_events_8000003=$(grep -c ':8000003:[1-9][0-9]*' ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv)
  end_events_8000003=$(grep -c ':8000003:0' ${target_log_folder}/trace/tracing.Tracing_compss_trace_*.prv)

  if [ "$start_events_8000000" != "$end_events_8000000" ] ; then
    echo "[ERROR] Number of start and end emits is not equal for 8000000 type of events" | tee -a $output_file
    errors=true
  fi
  if [ "$start_events_8000001" != "$end_events_8000001" ] ; then
    echo "[ERROR] Number of start and end emits is not equal for 8000001 type of events" | tee -a $output_file
    errors=true
  fi
  if [ "$start_events_8000002" != "$end_events_8000002" ] ; then
    echo "[ERROR] Number of start and end emits is not equal for 8000002 type of events" | tee -a $output_file
    errors=true
  fi
  if [ "$start_events_8000003" != "$end_events_8000003" ] ; then
    echo "[ERROR] Number of start and end emits is not equal for 8000003 type of events" | tee -a $output_file
    errors=true
  fi
  
  # Exit value
  if [ $errors == true ] ; then 
    exit 1
  fi
  exit 0
