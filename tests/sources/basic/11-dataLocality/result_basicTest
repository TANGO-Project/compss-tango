#!/bin/bash
  
  # Obtain parameters
  output_file=$1 
  target_log_folder=$2
  
  # Log files
  runtime_log="${target_log_folder}/runtime.log"
  
  #----------------------------------------------------------------------------------
  # Check output standard out status
  if [ -f ${output_file} ]; then
     result_expected="------------------------------------------------------------"
     test_result=$(tail -1 ${output_file})
     if [ "${result_expected}" != "${test_result}" ]; then
        echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
        exit 1
     fi
  else
     echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
     exit 1
  fi  
  # Check that ErrorManager has not generated any ERROR or FATAL message.
  if $(cat "${output_file}" "${runtime_log}" | tr '\n' ' ' | grep -E -q "[ERRMGR].*(ERROR|FATAL):.*.*Shutting"); then
    echo "ERROR: ERRMGR RAISED A FATAL ERROR. TEST FAILED." | tee -a ${output_file}
    exit 1
  fi

    
  #----------------------------------------------------------------------------------
  # Compute result status
  target_expected1=$'COMPSsWorker01\nCOMPSsWorker01\nCOMPSsWorker01\nCOMPSsWorker01\nCOMPSsWorker01'
  target_expected2=$'COMPSsWorker02\nCOMPSsWorker02\nCOMPSsWorker02\nCOMPSsWorker02\nCOMPSsWorker02'
  target_got=$(cat $runtime_log | grep "* Target host:" | rev | cut -d " " -f 1 | rev)
  
  score_expected_useless=$'0.0\n0.0\n0.0\n0.0' 
  score_expected_useful=$'1.0\n1.0\n1.0\n1.0'
  score_got_w1=$(cat $runtime_log | grep Score | grep COMPSsWorker01 | awk {' print $7 '} | tr ":" " " | tr "," " " | awk {' print $2 '} | tail -n 4)
  score_got_w2=$(cat $runtime_log | grep Score | grep COMPSsWorker02 | awk {' print $7 '} | tr ":" " " | tr "," " " | awk {' print $2 '} | tail -n 4)

  #----------------------------------------------------------------------------------
  # Report result status
  exitValue=0
  if [ "$target_got" == "$target_expected1" ]; then
	if [ "$score_got_w1" != "$score_expected_useful" ] || [ "$score_got_w2" != "$score_expected_useless" ]; then
		echo "ERROR: Scores are not computed correctly" | tee -a $output_file
		echo "EXPECTED COMPSsWorker01: $score_expected_useful" | tee -a $output_file
		echo "GOT COMPSsWorker01:      $score_got_w1" | tee -a $output_file
		echo "EXPECTED COMPSsWorker02: $score_expected_useless" | tee -a $output_file
		echo "GOT COMPSsWorker02:      $score_got_w2" | tee -a $output_file
		exitValue=2
	fi
  elif [ "$target_got" == "$target_expected2" ]; then
	if [ "$score_got_w1" != "$score_expected_useless" ] || [ "$score_got_w2" != "$score_expected_useful" ]; then
		echo "ERROR: Scores are not computed correctly" | tee -a $output_file
		echo "EXPECTED COMPSsWorker01: $score_expected_useless" | tee -a $output_file
		echo "GOT COMPSsWorker01:      $score_got_w1" | tee -a $output_file
		echo "EXPECTED COMPSsWorker02: $score_expected_useful" | tee -a  $output_file
		echo "GOT COMPSsWorker02:      $score_got_w2" | tee -a $output_file
		exitValue=2
	fi	
  else
	echo "ERROR: Tasks are not correctly scheduled" | tee -a $output_file
	echo "EXPECTED: $target_expected1" | tee -a $output_file
	echo "OR EXPECTED: $target_expected2" | tee -a $output_file
	echo "GOT:      $log_got" | tee -a $output_file
	exitValue=1
  fi
 
  exit $exitValue
  
