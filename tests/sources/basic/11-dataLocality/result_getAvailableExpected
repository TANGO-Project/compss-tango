#!/bin/bash

  ##############################################
  # Helper methods
  ##############################################
  updateBest() {
    bestActionScore=$1
    bestResourceScore=$2
    bestWaitingScore=$3
    bestImplScore=$4
    bestResourceId=$5
  }


  ##############################################
  # MAIN
  ##############################################
  runtimelog=$1

  scoresList=$(cat $runtimelog | egrep -A 4 "Scheduling.*execution:")
  
  while read -r line; do
    #PARSE LINE
    taskId=$(echo $line | tr " " "\n" | sed -n 10p | rev | cut -c 2- | rev)
    
    # Next 4 lines are the resources
    i=0
    bestActionScore="null"
    bestResourceScore=0
    bestWaitingScore=0
    bestImplScore=0
    bestResourceId="null"
    while [ $i -lt 4 ]; do
      read -r resource
      # Get scores 
      resourceId=$(echo $resource | tr " " "\n" | sed -n 2p)
      actionScore=$(echo $resource | tr " " "\n" | sed -n 6p)
      resourceScore=0
      waitingScore=0
      implScore=0
      if [ "$actionScore" != "null" ]; then
        actionScore=$(echo $resource | tr " " "\n" | sed -n 8p | tr ":" " " | tr "," " " | awk {' print $2 '})
        resourceScore=$(echo $resource | tr " " "\n" | sed -n 9p | tr ":" " " | tr "," " " | awk {' print $2 '})
        waitingScore=$(echo $resource | tr " " "\n" | sed -n 10p | tr ":" " " | tr "," " " | awk {' print $2 '})
        implScore=$(echo $resource | tr " " "\n" | sed -n 11p | tr ":" " " | tr "," " " | tr "]" " " | awk {' print $2 '})
      fi
      
      # Update best
      if [ "$actionScore" != "null" ]; then
        if [ "$bestActionScore" == "null" ]; then
          updateBest $actionScore $resourceScore $waitingScore $implScore $resourceId
        else
          as_gt=$(echo "$actionScore > $bestActionScore" | bc -l)
          as_eq=$(echo "$actionScore == $bestActionScore" | bc -l)
          if [ $as_gt -eq 1 ]; then
            updateBest $actionScore $resourceScore $waitingScore $implScore $resourceId
          elif [ $as_eq -eq 1 ]; then
            rs_gt=$(echo "$resourceScore > $bestResourceScore" | bc -l)
            rs_eq=$(echo "$resourceScore == $bestResourceScore" | bc -l)
            if [ $rs_gt -eq 1 ]; then
              updateBest $actionScore $resourceScore $waitingScore $implScore $resourceId
            elif [ $rs_eq -eq 1 ]; then
            
              ws_gt=$(echo "$waitingScore > $bestWaitingScore" | bc -l)
              ws_eq=$(echo "$waitingScore == $bestWaitingScore" | bc -l)
              if [ $ws_gt -eq 1 ]; then
              	updateBest $actionScore $resourceScore $waitingScore $implScore $resourceId
              elif [ $ws_eq -eq 1 ]; then
              	is_gt=$(echo "$implScore > $bestImplScore" | bc -l)
              	if [ $is_gt -eq 1 ]; then
                	updateBest $actionScore $resourceScore $waitingScore $implScore $resourceId
              	fi
              fi
            fi
          fi
        fi
      fi
      i=$((i+1))
    done
    # If task had no resource, look for forced schedule message
    if [ "$bestActionScore" == "null" ]; then
     bestResourceId=$(cat $runtimelog | egrep "Scheduling ExecutionAction \( Task ${taskId},.*on worker " | awk {' print $16 '})
    fi
    
    # Print result
    echo "$taskId $bestResourceId"

    # Skip grep sep line
    read -r skip
  done <<< "$scoresList"
  
  # End
  exit 0
  
