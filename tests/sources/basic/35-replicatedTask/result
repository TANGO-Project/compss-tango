#!/bin/bash

  #Obtain parameters
  output_file=$1 
  target_log_folder=$2
  final_graph_expected=$3
  
  # Log files
  runtime_log="${target_log_folder}/runtime.log"
  tracePRV="${target_log_folder}/trace/*.prv"

  #----------------------------------------------------------------------------------
  # Check output standard out status
  if [ -f ${output_file} ]; then
     result_expected="------------------------------------------------------------"
     test_result=$(tail -1 ${output_file})
     if [ "${result_expected}" != "${test_result}" ]; then
        echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
        exit 1
     fi
  else
     echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
     exit 1
  fi
  # Check that ErrorManager has not generated any ERROR or FATAL message.
  if $(cat "${output_file}" "${runtime_log}" | tr '\n' ' ' | grep -E -q "[ERRMGR].*(ERROR|FATAL):.*.*Shutting"); then
    echo "ERROR: ERRMGR RAISED A FATAL ERROR. TEST FAILED." | tee -a ${output_file}
    exit 1
  fi
  
  #----------------------------------------------------------------------------------
  # Check transfers on worker files
  numTransfersNIO=$(grep -R "does not exist, requesting data transfer" ${target_log_folder}/workers/ | wc -l)
  numTrasnfersGAT=$(cat ${runtime_log} | grep "GATCopy" | egrep "localhost|$(hostname)" | grep -v "out" | grep -v "err" | grep -v "tar\.gz" | wc -l)
  numTransfers=$((numTransfersNIO + numTrasnfersGAT))
  expectedNumTransfers=2
  if [ ${numTransfers} -ne ${expectedNumTransfers} ]; then
    echo "[ERROR] The number of transfers is incorrect. GOT ${numTransfers} EXPECTED ${expectedNumTransfers}"
    exit 1
  fi
  
  #----------------------------------------------------------------------------------
  # Check dot file
  final_graph_got=${target_log_folder}/monitor/complete_graph.dot
  graph_status=$(diff -U 0 ${final_graph_expected} ${final_graph_got} | grep -v ^@ | grep -v "#" | tail -n+3)
  if [ ! -z "${graph_status}" ]; then
    echo "[ERROR] Obtained graph file is not as expected" | tee -a ${output_file}
    exit 1
  fi
  
  #----------------------------------------------------------------------------------
  # Check PRV file
  tasksOrderExpected=$'1\n2\n2\n3\n3\n3\n3\n3\n3\n3\n3'
  tasksOrder=$(cat ${tracePRV} | grep "8000000" | grep -v "8000000:0" | tr ":" "\t" | awk {' print $NF '})
  if [ "${tasksOrderExpected}" != "${tasksOrder}" ]; then
    echo "[ERROR] Obtained trace file is not as expected" | tee -a ${output_file}
    echo "[ERROR] GOT ${tasksOrder}" | tee -a ${output_file}
    exit 1
  fi
  
  #----------------------------------------------------------------------------------
  # Report result status  
  exit 0
