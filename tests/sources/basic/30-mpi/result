#!/bin/bash

  # Obtain parameters
  output_file=$1 
  target_log_folder=$2
  
  # Log files
  runtime_log="${target_log_folder}/runtime.log"

  #----------------------------------------------------------------------------------
  # Check output standard out status
  if [ -f ${output_log} ]; then
     result_expected="------------------------------------------------------------"
     test_result=$(tail -1 ${output_file})
     if [ "${result_expected}" != "${test_result}" ]; then
        echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
        exit 1
     fi
  else
     echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
     exit 1
  fi
  # Check that ErrorManager has not generated any ERROR or FATAL message.
  if $(cat "${output_file}" "${runtime_log}" | tr '\n' ' ' | grep -E -q "[ERRMGR].*(ERROR|FATAL):.*.*Shutting"); then
    echo "ERROR: ERRMGR RAISED A FATAL ERROR. TEST FAILED." | tee -a ${output_file}
    exit 1
  fi
  
  #----------------------------------------------------------------------------------
  # Check MPI task execution status
  exitValue=0
  
  singleGOT=$(cat ${output_file} | grep "\[MPI\_SINGLE\] Received value from task is correct")
  if [ -z "${singleGOT}" ]; then
    echo "ERROR: Single MPI execution failed" | tee -a ${output_file}
    exitValue=1
  fi
  
  multipleGOT=$(cat ${output_file} | grep "\[MPI\_MULTIPLE\] Received value from task is correct")
  if [ -z "${multipleGOT}" ]; then
    echo "ERROR: Multiple MPI execution failed" | tee -a ${output_file}
    exitValue=1
  fi
  
  #----------------------------------------------------------------------------------
  # Check that MPI command from multi-node task uses more than one host
  jobOut=${target_log_folder}/jobs/job3_NEW.out
  numNodesExpected=2
  numNodesGOT=$(cat ${jobOut} | grep "\[MPI INVOKER\] MPI CMD" | awk {' print $7 '} | tr "," "\n" | wc -l)
  if [ ${numNodesGOT} -ne ${numNodesExpected} ]; then
    echo "ERROR: Incorrect number of MPI Nodes for multi-node task." | tee -a ${output_file}
    echo "  GOT: ${numNodesGOT}" | tee -a ${output_file}
    echo "  EXPECTED: ${numNodesExpected}" | tee -a ${output_file}
    exitValue=1
  fi

  #---------------------------------------------------------------------------------- 
  # Report result status
  exit ${exitValue}
