#!/bin/bash

  # Obtain parameters
  output_file=$1 
  target_log_folder=$2
  final_graph_expected=$3
 
  # Log files
  runtime_log="${target_log_folder}/runtime.log"

  #----------------------------------------------------------------------------------
  # Check output standard out status
  if [ -f ${output_file} ]; then
     result_expected="------------------------------------------------------------"
     test_result=$(tail -1 ${output_file})
     if [ "${result_expected}" != "${test_result}" ]; then
        echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
        exit 1
     fi
  else
     echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
     exit 1
  fi
  # Check that ErrorManager has not generated any ERROR or FATAL message.
  if $(cat "${output_file}" "${runtime_log}" | tr '\n' ' ' | grep -E -q "[ERRMGR].*(ERROR|FATAL):.*.*Shutting"); then
    echo "ERROR: ERRMGR RAISED A FATAL ERROR. TEST FAILED." | tee -a ${output_file}
    exit 1
  fi

  #----------------------------------------------------------------------------------
  # Compute sparseLU result status
  test_value=$(cat ${output_file} | grep "\[SUCCESS\]")

  if [ -z "$test_value" ]; then
    echo "[ERROR] Something went wrong. Check errors above." | tee -a ${output_file}
    exit 1
  fi

  #----------------------------------------------------------------------------------
  # Compute Graph status
  final_graph_got=${target_log_folder}/monitor/complete_graph.dot
  expectedDeps=$(cat ${final_graph_expected} | grep "\->" | wc -l)
  gotDeps=$(cat ${final_graph_got} | grep "\->" | wc -l)
  
  if [ $expectedDeps -ne $gotDeps ]; then
    echo "[ERROR] Obtained graph file is not as expected" | tee -a ${output_file}
    echo "EXPECTED DEPS: ${expectedDeps}" | tee -a ${output_file}
    echo "GOT DEPS:      ${gotDeps}" | tee -a ${output_file}
    exit 1
  fi
  
  exit 0
  
